token ='MTI0NTE4OTAaDi91NDY4Mg.GbkHCA.pesWVe4uvNVComVQx0eJpHYdnrDDZvXlX94fRk'

import discord
from discord.ext import commands
import uuid
from keras.preprocessing import image
from keras.models import load_model
import numpy as np

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix='$', intents=intents)
def get_class(model_path, labels_path, image_path):
    # load model
    model = load_model(model_path)

    # load label
    with open(labels_path, 'r') as f:
        labels = [line.strip() for line in f.readlines()]

    # Preprocess the image
    img = image.load_img(image_path, target_size=(224, 224))
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array /= 255.0  # Rescale the image

    # Inferensi
    predictions = model.predict(img_array)

    predict_idx = np.argmax(predictions, axis=1)
    predict_label = labels[predict_idx[0]]

    return predict_label

@bot.event
async def on_ready():
    print(f'We have logged in as {bot.user}')


@bot.command()
async def intro(ctx):
    await ctx.send(f"Kenalin, {bot.user}! Aku bot seputar polusi udara, mari bekerjasama!")

@bot.command()
async def heh(ctx, count_heh =  5):
    await ctx.send("he" * count_heh)

@bot.command(name='upload_image')
async def upload_image(ctx):
    if ctx.message.attachments:

        attachment = ctx.message.attachments[0]

        if attachment.filename.lower().endswith(('.png', '.jpg', '.jpeg', '.gif')):
            unique_filename = f"{uuid.uuid4()}_{attachment.filename}"
            file_path = f"images/{unique_filename}"

            await attachment.save(file_path)

            await ctx.send(f"Image saved as {unique_filename}")
        else:
            await ctx.send("The attached file is not an image. Please upload a .png .jpg .jpeg or .gif file")

    else:
        await ctx.send("No attachment found in the message. Please upload an image.")

@bot.command(name='predict_image')
async def predict_image(ctx):
    if ctx.message.attachments:

        attachment = ctx.message.attachments[0]

        if attachment.filename.lower().endswith(('.png', '.jpg', '.jpeg', '.gif')):
            unique_filename = f"{uuid.uuid4()}_{attachment.filename}"
            file_path = f"images/{unique_filename}"

            await attachment.save(file_path)
            model_path = 'keras_model.h5'
            label_path = 'labels.txt'
            result = get_class(model_path, label_path, file_path)

            await ctx.send("AI kamu memprediksi {result}")
            await ctx.send(f"Image saved as {unique_filename}")
        else:
            await ctx.send("The attached file is not an image. Please upload a .png .jpg .jpeg or .gif file")

    else:
        await ctx.send("No attachment found in the message. Please upload an image.")


bot.run(token)
